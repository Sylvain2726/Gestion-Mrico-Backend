<?php

namespace App\Http\Controllers;

use AfricasTalking\SDK\AfricasTalking;
use App\Models\Client;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

/**
 * @OA\Get(
 *     path="/api/clients",
 *     tags={"Clients"},
 *     summary="Liste des clients",
 *     description="Retourne une liste des clients",
 *
 *     @OA\Response(
 *         response=200,
 *         description="Succès"
 *     ),
 *     @OA\Response(
 *         response=401,
 *         description="Non autorisé"
 *     )
 * ),
 *
 *
 * )
 */
class ClientController extends Controller
{
    public function index()
    {
        $clients = Client::all();

        // $africasTalking = new AfricasTalking('sandbox', 'atsk_bf4a11a13ec267f1bc325cd7d2197aacb3c46f573f1b03f479aa6d936e86624a3c7bdc6c');
        // $sms = $africasTalking->sms();
        // $sms->send([
        //     'to' => "+22399023000",
        //     'message' => 'Votre prêt arrive à échéance dans 3 jours. Veuillez le payer.',
        //     'from' => 'G Micro Servcie',
        // ]);

        return response()->json([
            'clients' => $clients,
        ], 200);
    }

    /**
     * @OA\Post(
     *     path="/api/clients",
     *     summary="Créer un client",
     *     description="Crée un nouveau client avec un compte associé.",
     *     tags={"Clients"},
     *
     *     @OA\RequestBody(
     *         required=true,
     *
     *         @OA\JsonContent(
     *             required={"name", "email", "tel"},
     *
     *             @OA\Property(property="name", type="string", example="John Doe"),
     *             @OA\Property(property="email", type="string", format="email", example="john.doe@example.com"),
     *             @OA\Property(property="tel", type="string", example="1234567890"),
     *             @OA\Property(property="lieu_naissance", type="string", example="Bamako"),
     *             @OA\Property(property="date_naissance", type="string", format="date", example="1990-01-15")
     *         )
     *     ),
     *
     *     @OA\Response(
     *         response=201,
     *         description="Client créé avec succès",
     *
     *         @OA\JsonContent(
     *
     *             @OA\Property(property="message", type="string", example="Registration successful"),
     *             @OA\Property(property="client", type="object")
     *         )
     *     ),
     *
     *     @OA\Response(
     *         response=500,
     *         description="Erreur lors de la création du client",
     *
     *         @OA\JsonContent(
     *
     *             @OA\Property(property="message", type="string", example="Erreur de validation"),
     *             @OA\Property(property="errors", type="string")
     *         )
     *     )
     * )
     */
    public function store(Request $request)
    {

        try {
            DB::beginTransaction();

            $client = Client::create([
                'name' => $request->name,
                'email' => $request->email,
                // 'password' => Hash::make($request->password),
                'tel' => $request->tel,
                'lieu_naissance' => $request->lieu_naissance,
                'date_naissance' => $request->date_naissance,
            ]);

            $compte = $client->compte()->create([
                'num_compte' => $client->id,
            ]);

            $compte->update([
                'num_compte' => $compte->id.rand(1000, 9999),
            ]);

            $compte->save();

            $client->save();

            DB::commit();

            // Send email verification notification
            // $user->sendEmailVerificationNotification();

            return response()->json([
                'message' => 'Registration successful',
                'client' => $client->load('compte'),
            ], 201);
        } catch (\Throwable $th) {

            DB::rollBack();

            return response()->json([
                'message' => 'Erreur de validation',
                'errors' => $th->getMessage(),
            ], 500);
        }
    }

    /**
     * @OA\Get(
     *     path="/api/clients/{client}",
     *     summary="Afficher un client",
     *     description="Récupère les informations d'un client spécifique.",
     *     tags={"Clients"},
     *
     *     @OA\Parameter(
     *         name="client",
     *         in="path",
     *         required=true,
     *
     *         @OA\Schema(type="integer")
     *     ),
     *
     *     @OA\Response(
     *         response=200,
     *         description="Client récupéré avec succès",
     *
     *         @OA\JsonContent(
     *
     *             @OA\Property(property="client", type="object")
     *         )
     *     )
     * )
     */
    public function show(Client $client)
    {
        return response()->json([
            'client' => $client,
        ], 200);
    }

    /**
     * @OA\Put(
     *     path="/api/clients/{client}",
     *     summary="Mettre à jour un client",
     *     description="Met à jour les informations d'un client existant.",
     *     tags={"Clients"},
     *
     *     @OA\Parameter(
     *         name="client",
     *         in="path",
     *         required=true,
     *
     *         @OA\Schema(type="integer")
     *     ),
     *
     *     @OA\RequestBody(
     *         required=true,
     *
     *         @OA\JsonContent(
     *             required={"name", "email", "tel"},
     *
     *             @OA\Property(property="tel", type="string", example="1234567890"),
     *             @OA\Property(property="lieu_naissance", type="string", example="Bamako"),
     *             @OA\Property(property="date_naissance", type="string", format="date", example="1990-01-15")
     *             @OA\Property(property="email", type="string", format="email", example="john.doe@example.com"),
     *             @OA\Property(property="tel", type="string", example="1234567890")
     *         )
     *     ),
     *
     *     @OA\Response(
     *         response=200,
     *         description="Client mis à jour avec succès",
     *
     *         @OA\JsonContent(
     *
     *             @OA\Property(property="message", type="string", example="Client mis à jour avec succès")
     *         )
     *     )
     * )
     */
    public function update(Request $request, Client $client)
    {
        $client->update([
            'name' => $request->name,
            'email' => $request->email,
            'tel' => $request->tel,
            'lieu_naissance' => $request->lieu_naissance,
            'date_naissance' => $request->date_naissance,
        ]);

        return response()->json([
            'message' => 'Client mis à jour avec succès',
            'client' => $client->fresh(),
        ], 200);
    }

    /**
     * @OA\Delete(
     *     path="/api/clients/{client}",
     *     summary="Supprimer un client",
     *     description="Supprime un client spécifique.",
     *     tags={"Clients"},
     *
     *     @OA\Parameter(
     *         name="client",
     *         in="path",
     *         required=true,
     *
     *         @OA\Schema(type="integer")
     *     ),
     *
     *     @OA\Response(
     *         response=200,
     *         description="Client supprimé avec succès",
     *
     *         @OA\JsonContent(
     *
     *             @OA\Property(property="message", type="string", example="Client supprimé avec succès")
     *         )
     *     )
     * )
     */
    public function destroy(Client $client)
    {
        $client->delete();

        return response()->json([
            'message' => 'Client supprimé avec succès',
        ], 200);
    }
}
